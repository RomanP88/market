/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (6.0.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package ru.gb.market.order.tempForOpenApiGenerateFiles.controller;

import ru.gb.market.order.tempForOpenApiGenerateFiles.dto.Order;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.tags.Tag;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;

import java.util.List;
import javax.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2022-09-07T22:53:55.526326900+03:00[Europe/Moscow]")
@Validated
@Tag(name = "orders", description = "the orders API")
public interface OrdersApi {

    default OrdersApiDelegate getDelegate() {
        return new OrdersApiDelegate() {};
    }

    /**
     * GET /orders : Returns a Order
     *
     * @return OK (status code 200)
     */
    @Operation(
        operationId = "ordersGet",
        summary = "Returns a Order",
        responses = {
            @ApiResponse(responseCode = "200", description = "OK", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Order.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/orders",
        produces = { "application/json" }
    )
    default ResponseEntity<List<Order>> ordersGet(
        
    ) {
        return getDelegate().ordersGet();
    }


    /**
     * GET /orders/{id} : Returns a Order by Id
     *
     * @param id User ID (required)
     * @return OK (status code 200)
     */
    @Operation(
        operationId = "ordersIdGet",
        summary = "Returns a Order by Id",
        responses = {
            @ApiResponse(responseCode = "200", description = "OK", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Order.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/orders/{id}",
        produces = { "application/json" }
    )
    default ResponseEntity<Order> ordersIdGet(
        @Parameter(name = "id", description = "User ID", required = true) @PathVariable("id") Object id
    ) {
        return getDelegate().ordersIdGet(id);
    }

}
